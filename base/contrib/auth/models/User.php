<?php

/**
 * User
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class User extends BaseUser {

    /*
     * @const User::SESSION_NAME
     * the name stored in session
     */
    const SESSION_NAME = 'user_info';

    /*
     * @const User::AUTH_TYPE
     * use which auth type
     */
    const AUTH_TYPE    = 'sha1';

    /*
     * @var User::$is_authenticated boolean
     * if the user be authenticated
     */
    static public $is_authenticated = false;

    /*
     * @var User::$info
     * the loggin user info
     */
    static public $info = false;

    static public function get_by_id($user_id) {
        return Doctrine_Query::create()
                               ->select('u.*, IFNULL(u.nickname, u.username) AS name')
                               ->from('User u')
                               ->leftJoin('u.Role ur')
                               ->where('u.id = ?', $user_id)
                               ->fetchOne();
    }


    /*
     * User::authentication()
     * @param $username string | username or email
     * @param $password string password
     * @param $by enum(username, email)
     * @return User instance or error message
     *
     * <code>
     *  $user = User::authentication('username_or_email', 'password');
     *  User::is_authenticated();
     * </code>
     */
    static public function authentication($username_or_email, $password,
                                            $by = 'username') {
        import('system/share/network/session');
        Session::start();
        if(self::is_authenticated() && self::$info
                                    && $_SESSION[self::SESSION_NAME]) {
            return self::$info;
        }

        if(!in_array($by, array('username', 'email'))) {
            return false;
        }

        try {
            DatabaseBackend::load_model('system/contrib/auth');
            $user = Doctrine_Query::create()
                            ->select('*')
                            ->from('User u')
                            ->leftJoin('u.Group g')
                            ->where(sprintf('u.%s="%s"', $by, $username_or_email))
                            ->fetchOne();
            if(!$user) {
                return _('Username or email does not exits');
            }
            list($func, $random, $encryped) = explode('$', $user->password);
            if($user->password && $user->password === self::generate_password(
                                                $password, $random, $func)) {

                self::$is_authenticated = true;
                
                self::$info = $_SESSION[self::SESSION_NAME] = array(
                    'id'=> $user->id,
                    'username'=> $user->username,
                    'group'=> array(
                        'id'=> $user->Group->id,
                        'name'=> $user->Group->name
                    )
                );

                if($user->Role) {
                    foreach($user->Role as $role) {
                        self::$info['role'][]
                        = $_SESSION[self::SESSION_NAME]['role'][] = array(
                            'id' => $role->id,
                            'name' => $role->name,
                            'alias'=> $role->alias
                        );
                    }
                }


            } else {
                return _("Password doesn't match");
            }

        } catch(Doctrine_Query_Exception $e) {
            return _('System error');
        }
        
        return $user ? $user : _('Username or email does not exits');
    }

    /*
     * User::is_authenticated
     * @param
     * @return boolean
     *
     * return if current user loggined
     */
    static public function is_authenticated() {
        if(self::$is_authenticated) {
            return true;
        }

        import('system/share/network/session');
        Session::start();

        if($_SESSION[self::SESSION_NAME]) {
            self::$info = $_SESSION[self::SESSION_NAME];
            return true;
        }

        return false;
    }

    /*
     * User::logout()
     */
    static public function logout() {
        import('system/share/network/session');
        Session::start();
        unset($_SESSION[self::SESSION_NAME]);
        self::$info = false;
    }

    /*
     * User::generate_password()
     * @param $password string
     * @param $random   string
     * @param $func     string
     * @return string | the password
     *
     * <code>
     *  User::generate_password('password', 'ik293', 'sha1')
     * </code>
     */
    static public function generate_password($password, $random = null, $func = null) {
        if(!$random) {
            $str = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!@#%^&*()|_+{}[]-=';
            for($i=0; $i<5; $i++) {
                $random.= $str{rand(0, strlen($str)-1)};
            }
        }
        $func_name = $func ? $func :self::AUTH_TYPE;
        
        if(function_exists($func_name)) {
            $password = $func_name($password.$random);
        }

        return sprintf('%s$%s$%s', self::AUTH_TYPE, $random, $password);
    }

    /*
     * User::current()
     * @return Doctrine Record Object
     *
     * Get the object of current user.
     */
    static public function current() {
        $user_id = self::info('id');
        return Doctrine_Query::create()
                                ->select('*')
                                ->from('User u')
                                ->where('id = ?', $user_id)
                                ->fetchOne();
    }

    
    static public function info($key = null) {
        if(!self::$info) {
            if(!self::is_authenticated()) {
                return false;
            }
        }

        if($key) {
            return self::$info[$key];
        }

        return self::$info;
        
    }

    /*
     * 根据用户的角色别名获取用户
     */
    static public function get_by_role_alias($role_alias) {
        $query = Doctrine_Query::create()
                               ->select('u.*, IFNULL(u.nickname, u.username) AS name, ur.*')
                               ->from('User u')
                               ->leftJoin('u.Role ur');

        /*
         * 多个角色
         */
        if(is_array($role_alias) && count($role_alias) > 2) {
            $role_alias_string = implode('\',\'', $role_alias);
            $query->where(sprintf('ur.alias IN (\'%s\')', $role_alias_string));
        /*
         * 一个角色 但用的是数组
         */
        } else if(is_array($role_alias) && count($role_alias) < 2) {
            $role_alias = $role_alias[0];
            $query->where('ur.alias = ?', $role_alias);
        } else {
            $query->where('ur.alias = ?', $role_alias);
        }
        
                               
        return $query->fetchArray();
    }

    static public function has_role($role_alias) {
        $info = User::info('role');
        foreach($info as $role) {
            if($role['alias'] == $role_alias) {
                return true;
            }
        }

        return false;
    }
    

}
