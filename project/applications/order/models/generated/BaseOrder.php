<?php

/**
 * BaseOrder
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $customer_id
 * @property integer $workflow_id
 * @property integer $duration
 * @property integer $customer_service_id
 * @property integer $seller_id
 * @property integer $designer_id
 * @property integer $layouter_id
 * @property integer $programmer
 * @property Workflow $Workflow
 * @property Customer $Customer
 * @property Doctrine_Collection $Communication
 * @property Doctrine_Collection $Solution
 * @property Doctrine_Collection $OrderPeripheral
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOrder extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('orders');
        $this->hasColumn('type', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('group_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('duration', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('customer_id', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             ));
        $this->hasColumn('workflow_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('duration', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('customer_service_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('seller_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('designer_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('layouter_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('programmer', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('subscribe_time', 'datetime', null, array(
             'type' => 'datetime',
             ));
        $this->hasColumn('example_url', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('paper_attachment', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('content', 'text');

        $this->hasColumn('index_decide_attachment', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('inner_decide_attachment', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('programe_decide_attachment', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));

        
        $this->hasColumn('community_log', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));


        $this->index('select', array(
             'fields' => 
             array(
              0 => 'customer_id',
              1 => 'workflow_id',
              2 => 'customer_service_id',
              3 => 'seller_id',
              4 => 'designer_id',
              5 => 'layouter_id',
             ),
             ));
        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Workflow', array(
             'local' => 'workflow_id',
             'foreign' => 'id'));

        $this->hasOne('Customer', array(
             'local' => 'customer_id',
             'foreign' => 'id'));

        $this->hasOne('User as Seller', array(
             'local' => 'seller_id',
             'foreign' => 'id'
        ));

        $this->hasOne('User as CustomerService', array(
             'local' => 'customer_service_id',
             'foreign' => 'id'
        ));

        $this->hasOne('User as Designer', array(
             'local' => 'designer_id',
             'foreign' => 'id'
        ));

        $this->hasMany('Communication', array(
             'local' => 'id',
             'foreign' => 'order_id'));

        $this->hasMany('Solution', array(
             'local' => 'id',
             'foreign' => 'order_id'));

        $this->hasMany('Payment', array(
             'local' => 'id',
             'foreign' => 'order_id'));

        $this->hasMany('OrderPeripheral', array(
             'local' => 'id',
             'foreign' => 'order_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}