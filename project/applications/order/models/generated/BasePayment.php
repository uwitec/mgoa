<?php

/**
 * BasePayment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $order_id
 * @property string $type
 * @property integer $price
 * @property integer $invoice
 * @property integer $public
 * @property string $bank
 * @property integer $is_payed
 * @property Order $Order
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePayment extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('order_payment');
        $this->hasColumn('order_id', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             ));
        $this->hasColumn('type', 'string', 10, array(
             'type' => 'string',
             'length' => '10',
             ));
        $this->hasColumn('price', 'integer', 10, array(
             'type' => 'integer',
             'length' => '10',
             ));
        $this->hasColumn('invoice', 'integer', 1, array(
             'type' => 'integer',
             'length' => '1',
             ));
        $this->hasColumn('public', 'integer', 1, array(
             'type' => 'integer',
             'length' => '1',
             ));
        $this->hasColumn('bank', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('who', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('content', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('is_payed', 'integer', 1, array(
             'type' => 'integer',
             'default' => 0,
             'length' => '1',
             ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Order', array(
             'local' => 'order_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}