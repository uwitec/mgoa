<?php

/**
 * BaseWorkflow
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $template
 * @property integer $sequence
 * @property string $roles
 * @property integer $display
 * @property Doctrine_Collection $Order
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseWorkflow extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('workflow');
        $this->hasColumn('name', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('alias', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('action', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('sequence', 'integer', 1, array(
             'type' => 'integer',
             'length' => '1',
             ));
        $this->hasColumn('roles', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('template', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('state', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('display', 'integer', 1, array(
             'type' => 'integer',
             'default' => '1',
             'length' => '1',
             ));
        $this->hasColumn('parent_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('operation', 'text');


        $this->index('select', array(
             'fields' => 
             array(
              0 => 'sequence',
              1 => 'roles',
              2 => 'display',
              3 => 'alias',
             ),
             ));
        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();

        $this->hasMany('Order', array(
             'local' => 'id',
             'foreign' => 'workflow_id'));
        $this->hasOne('Workflow as Parent', array('local'=> 'parent_id', 'foreign'=>'id'));
        $this->hasMany('Workflow as Children', array('local'=> 'id', 'foreign'=>'parent_id'));

    }
}